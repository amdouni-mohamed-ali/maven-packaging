<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>maven-packaging</artifactId>
        <groupId>org.maven.tutorial.examples</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>maven-packaging-assembly</artifactId>

    <properties>
        <java.version>1.8</java.version>
        <our.main.class>org.maven.tutorial.examples.Application</our.main.class>
        <delivery.file.name>assembly-packaging</delivery.file.name>
    </properties>

    <repositories>
        <!--
            another wat to add our oracle jdbc jar to the maven dependencies is to define an in-project repository
         -->
        <repository>
            <id>in-project</id>
            <name>In Project Repo</name>
            <releases>
                <enabled>true</enabled>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>file://${project.basedir}/dependencies</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- oracle jdbc driver -->
        <dependency>
            <groupId>com.oracle.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
            <version>12.2.0.1</version>
        </dependency>

        <!-- this dependency is used to create the timestamp for the delivery file name -->
        <!-- we must add the exclusion tag to this dependency otherwise we will have a jars conflict
        (this dependency use slf4j and the same thing for logback)-->
        <dependency>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <version>1.4</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.sonatype.gossip</groupId>
                    <artifactId>gossip</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- not necessary to use the compiler plugin -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!--
                this plugin will add dependencies to the META-INF/MANIFEST.MF delivery jar file
                check this : https://maven.apache.org/shared/maven-archiver/examples/classpath.html
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <excludes>
                        <!-- exclude our configuration files from delivery jar file -->
                        <!--<exclude>logback.xml</exclude>-->
                        <exclude>*.xml</exclude>
                        <exclude>*.properties</exclude>
                        <exclude>**/scripts/*</exclude>
                    </excludes>

                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <!-- our jar will be extracted to project-name/bin and its class path will be in project-name/lib -->
                            <classpathPrefix>../lib/</classpathPrefix>
                            <mainClass>${our.main.class}</mainClass>
                        </manifest>

                        <manifestEntries>
                            <!-- include our configuration files to the delivery jar file (from outside the jar) -->
                            <Class-Path>../conf/</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- assembly plugin configuration (check the src/assembly/assembly-descriptor.xml file to get rhe full assembly configuration -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>${delivery.file.name}-${project.version}-${timestamp}</finalName>
                            <archive>
                                <manifest>
                                    <mainClass>org.maven.tutorial.examples.Application</mainClass>
                                </manifest>
                            </archive>
                            <descriptors>
                                <descriptor>src/assembly/assembly-descriptor.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- configure the timestamp property (gmaven-plugin framework) -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>set-custom-property</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                def timestamp = new Date().format('MMddyyyy.HHmmss')
                                project.properties.setProperty('timestamp', timestamp)
                            </source>
                        </configuration>
                    </execution>
                    <execution><!-- for demonstration purpose -->
                        <id>show-custom-property</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                println project.properties['timestamp']
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>